{"version":3,"sources":["utils/fetchClient.ts","types/Enum.ts","api/todos.ts","components/TodoContext/TodoContext.tsx","components/TodoHeader/TodoHeader.tsx","components/TodoItem/TodoItem.tsx","components/TempoTodoItem/TempoTodoItem.tsx","components/TodoList/TodoList.tsx","utils/todosFilter.ts","components/TodoFooter/TodoFooter.tsx","components/TodoNotification/TodoNotification.tsx","components/TodoApp/TodoApp.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","Filter","client","deleteTodo","id","createTodo","userId","title","completed","updateTodo","USER_ID","TodoContext","React","createContext","todos","todosUncompleted","todosCompleted","addTodo","toggleTodo","toogleAll","deleteComplitedTodo","isError","message","setIsError","tempoTodo","setTempoTodo","inputValue","setInputValue","isOnAdd","setIsOnAdd","isCompliteDeleting","isToogleAllClick","isTodoOnUpdate","resetError","handleAddTodoError","TodoProvider","timeoutId","children","useState","setTodos","setIsCompliteDeleting","setIsToogleAllClick","setIsTodoOnUpdate","errorMessage","useEffect","clearTimeout","updateTodoHelper","updatedTodo","updateFunction","a","updatedTodoFromServer","updatedTodos","map","todo","fetchedTodos","catch","error","useMemo","filter","length","tempTodo","todosService","newTodo","selectedTodo","allCompleted","every","tooglePromise","all","updatedTitle","deletionPromises","contextValue","Provider","value","useTodo","useContext","TodoHeader","inputRef","useRef","inputOnFocus","setInputOnFocus","trim","current","focus","className","type","classNames","active","onClick","onSubmit","e","preventDefault","placeholder","onChange","target","disabled","ref","TodoItem","isLoading","setIsLoading","isEditing","setIsEditing","setUpdatedTitle","handleUpdateOrDelete","onDoubleClick","htmlFor","onBlur","event","TempoTodoItem","TodoList","selectedFilter","Active","item","Complited","filteredTodos","TodoFooter","selectTheFilter","href","selected","All","TodoNotification","hidden","TodoApp","setSelectedFilter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bb4378e.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","// eslint-disable-next-line no-shadow\nexport enum Filter {\n  All = 'all',\n  Active = 'active',\n  Complited = 'completed',\n}\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const deleteTodo = (id: number) => {\n  return client.delete(`/todos/${id}`);\n};\n\nexport const createTodo = ({ userId, title, completed }: Omit<Todo, 'id'>) => {\n  return client.post<Todo>('/todos', { userId, title, completed });\n};\n\nexport const updateTodo = ({\n  id, userId, title, completed,\n}: Todo) => {\n  return client.patch<Todo>(`/todos/${id}`, { userId, title, completed });\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserWarning } from '../../UserWarning';\nimport * as todosService from '../../api/todos';\n\nconst USER_ID = 11383;\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype TodoContextValue = {\n  todos: Todo[];\n  todosUncompleted: number;\n  todosCompleted: Todo[];\n  addTodo: (inputValue: string) => void;\n  toggleTodo: (selectedTodo: Todo) => void;\n  toogleAll: () => void;\n  deleteTodo: (todo: Todo) => void;\n  deleteComplitedTodo: () => void;\n  updateTodo: (updatedTitle: string, todo: Todo) => void;\n  isError: { isError: boolean, message: string }\n  setIsError: (isError: { isError: boolean; message: string }) => void;\n  tempoTodo: Todo | null;\n  setTempoTodo: (tempoTodo: Todo | null) => void;\n  inputValue: string;\n  setInputValue: (inputValue: string) => void;\n  isOnAdd: boolean;\n  setIsOnAdd: (isOnAdd: boolean) => void;\n  isCompliteDeleting: boolean;\n  isToogleAllClick: boolean;\n  isTodoOnUpdate: Todo | null;\n  resetError: () => void;\n  handleAddTodoError: (errorMessage: string) => void;\n};\n\nexport const TodoContext = React.createContext<TodoContextValue>({\n  todos: [],\n  todosUncompleted: 0,\n  todosCompleted: [],\n  addTodo: () => {},\n  toggleTodo: () => {},\n  toogleAll: () => {},\n  deleteTodo: () => { },\n  deleteComplitedTodo: () => { },\n  updateTodo: () => { },\n  isError: { isError: false, message: '' },\n  setIsError: () => {},\n  tempoTodo: null,\n  setTempoTodo: () => {},\n  inputValue: '',\n  setInputValue: () => {},\n  isOnAdd: false,\n  setIsOnAdd: () => {},\n  isCompliteDeleting: false,\n  isToogleAllClick: false,\n  isTodoOnUpdate: null,\n  resetError: () => {},\n  handleAddTodoError: () => {},\n});\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[] | []>([]);\n  const [isError, setIsError] = useState({ isError: false, message: '' });\n  const [tempoTodo, setTempoTodo] = useState<Todo | null>(null);\n  const [isOnAdd, setIsOnAdd] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [isCompliteDeleting, setIsCompliteDeleting] = useState(false);\n  const [isToogleAllClick, setIsToogleAllClick] = useState(false);\n  const [isTodoOnUpdate, setIsTodoOnUpdate] = useState<Todo | null>(null);\n  let timeoutId: NodeJS.Timeout | null;\n\n  const resetError = () => {\n    setIsError({ isError: false, message: '' });\n  };\n\n  const handleAddTodoError = (errorMessage: string) => {\n    setIsError({ isError: true, message: errorMessage });\n  };\n\n  useEffect(() => {\n    if (isError.isError) {\n      timeoutId = setTimeout(() => {\n        resetError();\n      }, 3000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [isError, resetError]);\n\n  const updateTodoHelper = async (\n    updatedTodo: Todo, updateFunction: (todo: Todo) => Promise<Todo>,\n  ) => {\n    setIsTodoOnUpdate(updatedTodo);\n\n    try {\n      const updatedTodoFromServer = await updateFunction(updatedTodo);\n\n      if (updatedTodoFromServer) {\n        const updatedTodos = todos.map((todo: Todo) => (\n          todo.id === updatedTodoFromServer.id ? updatedTodoFromServer : todo\n        ));\n\n        setTodos(updatedTodos);\n      }\n    } catch (error) {\n      handleAddTodoError('Unable to update todo');\n    } finally {\n      setIsTodoOnUpdate(null);\n    }\n  };\n\n  useEffect(() => {\n    if (USER_ID) {\n      todosService.getTodos(USER_ID)\n        .then((fetchedTodos) => {\n          setTodos(fetchedTodos);\n        })\n        .catch((error) => {\n          setIsError({ isError: true, message: `${error}` });\n        });\n    }\n  }, []);\n\n  const todosUncompleted = useMemo(() => todos.filter(\n    todo => !todo.completed,\n  ).length, [todos]);\n\n  const todosCompleted = useMemo(() => todos.filter(\n    todo => todo.completed,\n  ), [todos]);\n\n  // #region Add Todo Section\n  const createTempTodo = () => ({\n    id: 0,\n    userId: USER_ID,\n    title: inputValue,\n    completed: false,\n  });\n\n  const resetAddTodoState = () => {\n    setTempoTodo(null);\n    setInputValue('');\n    setIsOnAdd(false);\n  };\n\n  const addTodo = async () => {\n    setIsOnAdd(true);\n\n    try {\n      const tempTodo = createTempTodo();\n\n      setTempoTodo(tempTodo);\n      const newTodo = await todosService.createTodo(tempTodo);\n\n      if (newTodo) {\n        setTodos([...todos, newTodo]);\n      }\n    } catch (error) {\n      handleAddTodoError('Unable to add a todo');\n    } finally {\n      resetAddTodoState();\n    }\n  };\n  // #endregion Add Todo Section\n\n  // #region Update Todo Section\n  const toggleTodo = async (selectedTodo: Todo) => {\n    const updatedTodo = { ...selectedTodo, completed: !selectedTodo.completed };\n\n    await updateTodoHelper(updatedTodo, todosService.updateTodo);\n  };\n\n  const toogleAll = async () => {\n    setIsToogleAllClick(true);\n\n    const allCompleted = todos.every(todo => todo.completed === true);\n    const updatedTodos = todos.map((todo: Todo) => ({\n      ...todo,\n      completed: !allCompleted,\n    }));\n\n    try {\n      const tooglePromise = updatedTodos.map(\n        todo => todosService.updateTodo(todo),\n      );\n\n      await Promise.all(tooglePromise);\n      setTodos(updatedTodos);\n    } catch (error) {\n      handleAddTodoError('Unable to update todos');\n    } finally {\n      setIsToogleAllClick(false);\n    }\n  };\n\n  const updateTodo = async (updatedTitle: string, selectedTodo: Todo) => {\n    const updatedTodo = { ...selectedTodo, title: updatedTitle };\n\n    await updateTodoHelper(updatedTodo, todosService.updateTodo);\n  };\n  // #endregion Update Todo Section\n\n  // #region Delete Todo Section\n  const deleteTodo = async (selectedTodo: Todo) => {\n    setIsTodoOnUpdate(selectedTodo);\n    try {\n      await todosService.deleteTodo(selectedTodo.id);\n      setTodos(todos.filter(todo => todo.id !== selectedTodo.id));\n    } catch (error) {\n      handleAddTodoError('Unable to delete a todo');\n    } finally {\n      setIsTodoOnUpdate(null);\n    }\n  };\n\n  const deleteComplitedTodo = async () => {\n    if (todosCompleted.length > 0) {\n      setIsCompliteDeleting(true);\n      try {\n        const deletionPromises = todosCompleted.map(\n          todo => todosService.deleteTodo(todo.id),\n        );\n\n        await Promise.all(deletionPromises);\n        setTodos(todos.filter(todo => !todo.completed));\n      } catch (error) {\n        handleAddTodoError('Unable to delete a todo');\n      } finally {\n        setIsCompliteDeleting(false);\n      }\n    }\n  };\n  // #endregion Delete Todo Section\n\n  const contextValue: TodoContextValue = {\n    todos,\n    todosUncompleted,\n    todosCompleted,\n    addTodo,\n    toggleTodo,\n    toogleAll,\n    deleteTodo,\n    deleteComplitedTodo,\n    updateTodo,\n    isError,\n    setIsError,\n    resetError,\n    tempoTodo,\n    setTempoTodo,\n    inputValue,\n    setInputValue,\n    isOnAdd,\n    setIsOnAdd,\n    isCompliteDeleting,\n    isToogleAllClick,\n    isTodoOnUpdate,\n    handleAddTodoError,\n  };\n\n  if (!USER_ID) {\n    return <UserWarning />;\n  }\n\n  return (\n    <TodoContext.Provider value={contextValue}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n\nexport const useTodo = (): TodoContextValue => React.useContext(TodoContext);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport classNames from 'classnames';\n\nimport React, {\n  ChangeEvent,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useTodo } from '../TodoContext/TodoContext';\n\nexport const TodoHeader: React.FC = () => {\n  const {\n    todos,\n    todosUncompleted,\n    toogleAll,\n    addTodo,\n    isOnAdd,\n    inputValue,\n    setInputValue,\n    handleAddTodoError,\n    resetError,\n    isError,\n  } = useTodo();\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const [inputOnFocus, setInputOnFocus] = useState(false);\n  let timeoutId: NodeJS.Timeout | null;\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n    setInputOnFocus(true);\n  };\n\n  const handleTodoAdd = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!inputValue.trim()) {\n      handleAddTodoError(\"Title can't be empty\");\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(() => {\n        resetError();\n      }, 3000);\n    } else {\n      addTodo(inputValue);\n    }\n  };\n\n  useEffect(() => {\n    if (isError.isError && inputValue.trim() !== '') {\n      resetError();\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    }\n  }, [inputValue, isError, resetError]);\n\n  useEffect(() => {\n    if (inputOnFocus && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [todos, inputOnFocus, inputRef.current]);\n\n  return (\n    <header className=\"todoapp__header\">\n      {!!todos.length && (\n        <button\n          type=\"button\"\n          className={classNames(\n            'todoapp__toggle-all',\n            { active: !todosUncompleted },\n          )}\n          title=\"Togle All\"\n          onClick={toogleAll}\n        />\n      )}\n\n      <form onSubmit={handleTodoAdd}>\n        <input\n          type=\"text\"\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={inputValue}\n          onChange={handleInputChange}\n          disabled={isOnAdd}\n          ref={inputRef}\n        />\n      </form>\n    </header>\n  );\n};\n","import classNames from 'classnames';\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { useTodo } from '../TodoContext/TodoContext';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const {\n    toggleTodo,\n    deleteTodo,\n    updateTodo,\n    isCompliteDeleting,\n    isToogleAllClick,\n    isTodoOnUpdate,\n  } = useTodo();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedTitle, setUpdatedTitle] = useState('');\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (isEditing && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isEditing, inputRef.current]);\n\n  useEffect(() => {\n    if (isCompliteDeleting && todo.completed) {\n      setIsLoading(true);\n    }\n  }, [isCompliteDeleting]);\n\n  useEffect(() => {\n    if (isTodoOnUpdate?.id === todo.id) {\n      setIsLoading(true);\n    }\n\n    if (!isTodoOnUpdate) {\n      setIsLoading(false);\n    }\n  }, [isTodoOnUpdate]);\n\n  const handleToggle = () => {\n    toggleTodo(todo);\n  };\n\n  const handleDeleteTodo = () => {\n    deleteTodo(todo);\n  };\n\n  const handleDoubleClick = () => {\n    setIsEditing(true);\n    setUpdatedTitle(todo.title);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUpdatedTitle(event.target.value);\n  };\n\n  const handleUpdateOrDelete = () => {\n    if (!updatedTitle.trim()) {\n      deleteTodo(todo);\n    } else {\n      updateTodo(updatedTitle, todo);\n    }\n  };\n\n  const handleTodoUpdate = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsEditing(false);\n    handleUpdateOrDelete();\n  };\n\n  const handleBlur = () => {\n    setIsEditing(false);\n    handleUpdateOrDelete();\n  };\n\n  return (\n    <div\n      onDoubleClick={handleDoubleClick}\n      className={classNames(\n        'todo',\n        { completed: todo.completed },\n      )}\n    >\n      <label\n        className=\"todo__status-label\"\n        htmlFor={`todo-status-${todo.id}`}\n      >\n        <input\n          type=\"checkbox\"\n          className=\"todo__status\"\n          title=\"chekbox\"\n          onChange={handleToggle}\n          id={`todo-status-${todo.id}`}\n        />\n      </label>\n\n      {isEditing ? (\n        <form\n          onSubmit={handleTodoUpdate}\n          onBlur={handleBlur}\n        >\n          <input\n            type=\"text\"\n            className=\"todo__title-field\"\n            placeholder=\"Empty todo will be deleted\"\n            value={updatedTitle}\n            onChange={handleTitleChange}\n            ref={inputRef}\n          />\n        </form>\n      ) : (\n        <>\n          <span className=\"todo__title\">{todo.title}</span>\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n            onClick={handleDeleteTodo}\n          >\n            ×\n          </button>\n        </>\n\n      )}\n\n      <div className={classNames(\n        'modal overlay',\n        { 'is-active': isLoading || isToogleAllClick },\n      )}\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  tempoTodo: Todo;\n};\n\nexport const TempoTodoItem: React.FC<Props> = ({ tempoTodo }) => {\n  return (\n    <div className=\"todo\">\n      <label\n        className=\"todo__status-label\"\n        htmlFor=\"tempo-todo-status\"\n      >\n        <input\n          type=\"checkbox\"\n          className=\"todo__status\"\n          title=\"chekbox\"\n          id=\"tempo-todo-status\"\n        />\n      </label>\n\n      <span className=\"todo__title\">{tempoTodo.title}</span>\n      <button\n        type=\"button\"\n        className=\"todo__remove\"\n      >\n        ×\n      </button>\n      <div className=\"modal overlay is-active\">\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { TempoTodoItem } from '../TempoTodoItem/TempoTodoItem';\nimport { filteredTodos } from '../../utils/todosFilter';\n\ntype Props = {\n  todos: Todo[];\n  selectedFilter: string;\n  tempoTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedFilter,\n  tempoTodo,\n}) => {\n  const updatedTodos = filteredTodos(todos, selectedFilter);\n\n  return (\n    <section className=\"todoapp__main\">\n      {updatedTodos.map(todo => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n      {!!tempoTodo && (\n        <TempoTodoItem tempoTodo={tempoTodo} key={tempoTodo.id} />\n      )}\n    </section>\n  );\n};\n","import { Filter } from '../types/Enum';\nimport { Todo } from '../types/Todo';\n\nexport function filteredTodos(todos: Todo[], selectedFilter: string) {\n  switch (selectedFilter) {\n    case Filter.Active:\n      return todos.filter(item => !item.completed);\n    case Filter.Complited:\n      return todos.filter(item => item.completed);\n    default:\n      return todos;\n  }\n}\n","import classNames from 'classnames';\n\nimport React from 'react';\nimport { Filter } from '../../types/Enum';\nimport { useTodo } from '../TodoContext/TodoContext';\n\ntype Props = {\n  selectedFilter: string;\n  selectTheFilter: (filter: Filter) => void;\n};\n\nexport const TodoFooter: React.FC<Props> = ({\n  selectedFilter,\n  selectTheFilter,\n}) => {\n  const {\n    todosCompleted,\n    todosUncompleted,\n    deleteComplitedTodo,\n  } = useTodo();\n\n  return (\n    <footer className=\"todoapp__footer\">\n      <span className=\"todo-count\">\n        {todosUncompleted === 1 ? (\n          '1 item left'\n        ) : (\n          `${todosUncompleted} items left`\n        )}\n      </span>\n\n      <nav className=\"filter\">\n        <a\n          href=\"#/\"\n          className={classNames(\n            'filter__link',\n            { selected: selectedFilter === Filter.All },\n          )}\n          onClick={() => selectTheFilter(Filter.All)}\n        >\n          All\n        </a>\n\n        <a\n          href=\"#/active\"\n          className={classNames(\n            'filter__link',\n            { selected: selectedFilter === Filter.Active },\n          )}\n          onClick={() => selectTheFilter(Filter.Active)}\n        >\n          Active\n        </a>\n\n        <a\n          href=\"#/completed\"\n          className={classNames(\n            'filter__link',\n            { selected: selectedFilter === Filter.Complited },\n          )}\n          onClick={() => selectTheFilter(Filter.Complited)}\n        >\n          Completed\n        </a>\n      </nav>\n\n      {!!todosCompleted && (\n        <button\n          type=\"button\"\n          className=\"todoapp__clear-completed\"\n          onClick={deleteComplitedTodo}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport classNames from 'classnames';\n\nimport React from 'react';\nimport { useTodo } from '../TodoContext/TodoContext';\n\nexport const TodoNotification: React.FC = () => {\n  const {\n    isError,\n    resetError,\n  } = useTodo();\n\n  const handleButtonClick = () => {\n    resetError();\n  };\n\n  return (\n\n    <div className={classNames(\n      'notification is-danger is-light has-text-weight-normal',\n      { hidden: !isError.isError },\n    )}\n    >\n      <button\n        type=\"button\"\n        className=\"delete\"\n        title=\"Click here\"\n        onClick={handleButtonClick}\n      />\n\n      {isError.message}\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState } from 'react';\nimport { TodoHeader } from '../TodoHeader/TodoHeader';\nimport { TodoList } from '../TodoList/TodoList';\nimport { TodoFooter } from '../TodoFooter/TodoFooter';\nimport { TodoNotification } from '../TodoNotification/TodoNotification';\nimport { useTodo } from '../TodoContext/TodoContext';\nimport { Filter } from '../../types/Enum';\n\nexport const TodoApp: React.FC = () => {\n  const { todos, tempoTodo } = useTodo();\n  const [selectedFilter, setSelectedFilter] = useState(Filter.All);\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <section className=\"todoapp__content\">\n        <TodoHeader />\n\n        {(!!todos.length || tempoTodo) && (\n          <>\n            <TodoList\n              todos={todos}\n              tempoTodo={tempoTodo}\n              selectedFilter={selectedFilter}\n            />\n\n            <TodoFooter\n              selectedFilter={selectedFilter}\n              selectTheFilter={setSelectedFilter}\n            />\n          </>\n        )}\n      </section>\n\n      <TodoNotification />\n    </div>\n  );\n};\n","import React from 'react';\nimport { TodoProvider } from './components/TodoContext/TodoContext';\nimport { TodoApp } from './components/TodoApp/TodoApp';\n\nexport const App: React.FC = () => {\n  return (\n    <TodoProvider>\n      <TodoApp />\n    </TodoProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}